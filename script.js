// üå∏ API server Render (ƒë·∫£m b·∫£o l√† HTTPS)
const API_URL = "https://kyniemdep.onrender.com"; // ‚ö†Ô∏è ƒê·ªïi n·∫øu domain kh√°c

const form = document.getElementById("memoryForm");
const memoriesContainer = document.getElementById("memories");

// ü©∑ T·∫£i danh s√°ch k·ª∑ ni·ªám khi m·ªü trang
async function loadMemories() {
  try {
    const res = await fetch(`${API_URL}/memories`);
    const data = await res.json();
    renderMemories(data);
  } catch (error) {
    alert("‚ö†Ô∏è Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi server. Ki·ªÉm tra l·∫°i API_URL ho·∫∑c Render!");
  }
}

// üì§ Upload ·∫£nh/video
form.addEventListener("submit", async (e) => {
  e.preventDefault();

  const title = document.getElementById("title").value.trim();
  const description = document.getElementById("description").value.trim();
  const file = document.getElementById("file").files[0];

  if (!file) return alert("Vui l√≤ng ch·ªçn ·∫£nh ho·∫∑c video!");

  const formData = new FormData();
  formData.append("title", title);
  formData.append("description", description);
  formData.append("file", file);

  try {
    const res = await fetch(`${API_URL}/upload`, {
      method: "POST",
      body: formData,
    });

    const newMemory = await res.json();
    addMemoryToPage(newMemory);
    form.reset();
  } catch (error) {
    alert("‚ö†Ô∏è L·ªói upload. Th·ª≠ l·∫°i sau!");
  }
});

// üñºÔ∏è Hi·ªÉn th·ªã t·∫•t c·∫£ k·ª∑ ni·ªám
function renderMemories(memories) {
  memoriesContainer.innerHTML = "";
  memories.forEach(addMemoryToPage);
}

// üß† Th√™m k·ª∑ ni·ªám v√†o giao di·ªán
function addMemoryToPage(memory) {
  const card = document.createElement("div");
  card.className = "memory-card";

  let mediaElement = "";
  if (memory.fileType.startsWith("video")) {
    mediaElement = `<video controls src="${memory.fileUrl}"></video>`;
  } else {
    mediaElement = `<img src="${memory.fileUrl}" alt="${memory.title}" />`;
  }

  card.innerHTML = `
    <h3>${memory.title}</h3>
    ${mediaElement}
    <p>${memory.description}</p>
    <div class="actions">
      <button onclick="deleteMemory(${memory.id})">Xo√°</button>
    </div>
  `;

  memoriesContainer.appendChild(card);
}

// üóëÔ∏è Xo√° k·ª∑ ni·ªám
async function deleteMemory(id) {
  await fetch(`${API_URL}/memories/${id}`, { method: "DELETE" });
  loadMemories();
}

// üöÄ B·∫Øt ƒë·∫ßu t·∫£i khi m·ªü trang
loadMemories();
